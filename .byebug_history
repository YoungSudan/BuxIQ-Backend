c
current_user
Account.where(user_id: current_user)
Account.all
Account.where(user_id: current_user ,account_type:"depository").sum(:current)
c
user
current_user
c
current_user.id.to_s
current_user
c
params
c
params['headers']['Authorization'].split[1].present?
params['headers']['Authorization'].split[1]
params['headers']['Authorization']
params['headers']
params.headers
params
user
current_user
c
params[:data][:public_token]
params[:data].public_token
params[:data]
params.body
params.json
params
params.body
params.data
params.data.dig(:public_token)
params
c
params.methods
params.body
params
current_user
request
request.body
c
request.body
params
c
PlaidService.new.client
PlaidService
c
PlaidService
c
PlaidService
MyCustomService.call
c
request
c
current_user
user
c
client
PlaidService
Plaid::LinkTokenCreateRequest.methods
Plaid::LinkTokenCreateRequest
PlaidService
c
caidService
::PlaidService
PlaidService
c
user.id.to_s
user.id
user
c
user
c
sc
s
request
params
request
request.headers['Authorization'].present?
user
c
current_user
c
current_user
c
current_user
c
request.headers['Authorization']
c
current_user
c
current_user
resource.persisted?
c
resource
current_user
c
n
session.to_json
session.to_j
session
sessioin
current_user
c
request.headers['Authorization']
current_user
c
request.headers['Authorization']
request.headers
request
current_user
c
request.headers['Authorization']
request.headers
c
request.headers['Authorization']
request.headers
request
c
request.headers
request
c
request
c
request
request['headers']
request.headers
c
response.headers
response
c
response
request
c
request.headers
request.headers['Authorization']
request.headers
res.headers
nlas
current_user
c
current_user
c
Rails.application.credentials.devise[:jwt_secret_key]
Rails.application.credentials.devise[:jwt_secret_key].first
c
jwt_payload
jwt_payload['sub']
jwt_payload[sub]
jwt_payload[:sub]
jwt_payload[:sub
c
jwt_payload
c
s
Rails.application.credentials.devise[:jwt_secret_key]
